package se.sundsvall.mex.integration.camunda.mapper;

import static se.sundsvall.mex.Constants.CAMUNDA_VARIABLE_CASE_NUMBER;
import static se.sundsvall.mex.Constants.CAMUNDA_VARIABLE_PHASE_ACTION;
import static se.sundsvall.mex.Constants.CAMUNDA_VARIABLE_REQUEST_ID;
import static se.sundsvall.mex.Constants.PHASE_ACTION_UNKNOWN;

import java.util.Map;

import org.camunda.bpm.engine.variable.type.ValueType;

import generated.se.sundsvall.camunda.PatchVariablesDto;
import generated.se.sundsvall.camunda.StartProcessInstanceDto;
import generated.se.sundsvall.camunda.VariableValueDto;
import se.sundsvall.dept44.requestid.RequestId;

public class CamundaMapper {

	private CamundaMapper() {}

	public static StartProcessInstanceDto toStartProcessInstanceDto(Long caseNumber) {
		return new StartProcessInstanceDto()
			.businessKey(Long.toString(caseNumber))
			.variables(Map.of(
				CAMUNDA_VARIABLE_CASE_NUMBER, toVariableValueDto(ValueType.LONG, caseNumber),
				CAMUNDA_VARIABLE_REQUEST_ID, toVariableValueDto(ValueType.STRING, RequestId.get()),
				CAMUNDA_VARIABLE_PHASE_ACTION, toVariableValueDto(ValueType.STRING, PHASE_ACTION_UNKNOWN)));
	}

	public static VariableValueDto toVariableValueDto(ValueType valueType, Object value) {
		return new VariableValueDto()
			.type(valueType.getName())
			.value(value);
	}

	public static PatchVariablesDto toPatchVariablesDto(Map<String, VariableValueDto> variablesToUpdate) {
		return new PatchVariablesDto()
			.modifications(variablesToUpdate);
	}
}
